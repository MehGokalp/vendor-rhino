// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	entity "github.com/mehgokalp/vendor-rhino/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// CardRepository is an autogenerated mock type for the CardRepository type
type CardRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: card
func (_m *CardRepository) Create(card *entity.Card) error {
	ret := _m.Called(card)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.Card) error); ok {
		r0 = rf(card)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: card
func (_m *CardRepository) Delete(card *entity.Card) error {
	ret := _m.Called(card)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.Card) error); ok {
		r0 = rf(card)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindByReference provides a mock function with given fields: reference
func (_m *CardRepository) FindByReference(reference string) *entity.Card {
	ret := _m.Called(reference)

	if len(ret) == 0 {
		panic("no return value specified for FindByReference")
	}

	var r0 *entity.Card
	if rf, ok := ret.Get(0).(func(string) *entity.Card); ok {
		r0 = rf(reference)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Card)
		}
	}

	return r0
}

// NewCardRepositoryInterface creates a new instance of CardRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCardRepositoryInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *CardRepository {
	mock := &CardRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
